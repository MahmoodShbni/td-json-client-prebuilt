name: tdlib-build

# برای ساخت Release با GITHUB_TOKEN
permissions:
  contents: write

on:
  # فقط اجرای دستی از UI
  workflow_dispatch:

jobs:
  build-linux-x64:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4

      - name: JSON to variables
        uses: rgarcia-phi/json-to-variables@v1.1.0
        with:
          filename: '.github/workflows/td-version.json'
          prefix: td

      - name: Setup (packages)
        run: |
          sudo apt-get update
          sudo apt-get install -y make git zlib1g-dev libssl-dev gperf php-cli cmake g++ zip

      - name: Clone TDLib
        run: |
          git clone https://github.com/tdlib/td.git
          cd td
          git checkout ${{ env.td_commit_hash }}
          git show --summary

      - name: Build TDLib (Linux)
        run: |
          cd td
          rm -rf build
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX:PATH=../tdlib ..
          cmake --build . --target prepare_cross_compiling
          cd ..
          php SplitSource.php
          cd build
          cmake --build . --target install
          cd ..
          php SplitSource.php --undo

      - name: Zip Linux lib
        run: |
          cd td/tdlib/lib
          zip libtdjson.zip libtdjson.so

      - name: Release (Linux x64)
        uses: ncipollo/release-action@v1
        with:
          tag: linux-x64-${{ env.td_version }}-${{ env.td_commit_hash }}
          name: Linux x64 ${{ env.td_version }}-${{ env.td_commit_hash }}
          body: https://github.com/tdlib/td/tree/${{ env.td_commit_hash }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: 'td/tdlib/lib/libtdjson.zip'
